name: build

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  discussions: write

jobs:
  build:
    name: build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'false'
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Build Packages
        run: |
          yarn
          yarn build
        shell: bash

      - name: Zip QQNTim Plugin
        run: |
          cd build/dist/qqntim/qqntim-plugin-chronocat
          zip -r ../qqntim-plugin-chronocat.zip *
          cd ..
          rm -r qqntim-plugin-chronocat
          cd ../../..
        shell: bash

      - name: Upload Packages
        uses: actions/upload-artifact@v3
        with:
          name: chronocat-pkgs-${{ github.sha }}
          path: build/dist/*.tgz

      - name: Upload LiteLoaderQQNT-Plugin-Chronocat
        uses: actions/upload-artifact@v3
        with:
          name: chronocat-llqqnt-${{ github.sha }}
          path: build/dist/llqqnt

      - name: Upload qqntim-plugin-chronocat
        uses: actions/upload-artifact@v3
        with:
          name: chronocat-qqntim-${{ github.sha }}
          path: build/dist/qqntim

      - name: Upload IIFE
        uses: actions/upload-artifact@v3
        with:
          name: chronocat-iife-${{ github.sha }}
          path: build/dist/iife

      - name: show upload artifact
        run: |
          ls -l build/dist
        shell: bash

      - name: Create Release and Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/heads/main')
        with:
          tag_name: ${{ github.ref }}-$(date +'%Y%m%d')
          name: Release ${{ github.ref }} $(date +'%Y%m%d')
          body: TODO New Release.
          draft: true
          prerelease: false
          files: |
            build/dist/*.tgz
            build/dist/llqqnt
            build/dist/qqntim
            build/dist/iife

#      - name: Build IIFE-TI
#        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
#        env:
#          TI_KEY: ${{ secrets.TI_KEY }}
#        run: |
#          mkdir -p build/dist/iife-ti
#          echo "$TI_KEY" > $RUNNER_TEMP/ti.pem
#          openssl dgst -sha256 -sign $RUNNER_TEMP/ti.pem -keyform PEM -out build/dist/iife-ti/chronocat.js.ti.bin -binary build/dist/iife/src/chronocat.js
#          rm $RUNNER_TEMP/ti.pem
#          cat build/dist/iife/src/chronocat.js >> build/dist/iife-ti/chronocat.js.ti.bin
#        shell: bash
#
#      - name: Upload IIFE-TI
#        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
#        uses: actions/upload-artifact@v3
#        with:
#          name: chronocat-iife-ti-${{ github.sha }}
#          path: build/dist/iife-ti/chronocat.js.ti.bin

#      - name: Publish LiteLoaderQQNT-Plugin-Chronocat
#        if: startsWith(github.ref, 'refs/tags/v')
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          personal_token: ${{ secrets.DEPLOY_TOKEN }}
#          user_name: 'BuDingOwO'
#          user_email: 'ConBlueCut@outlook.com'
#          external_repository: chrononeko/LiteLoaderQQNT-Plugin-Chronocat
#          publish_branch: master
#          publish_dir: build/dist/llqqnt/LiteLoaderQQNT-Plugin-Chronocat
#          enable_jekyll: true # Not to create .nojekyll since this is not a gh page
#          commit_message: 'chore: publish ${{ github.sha }}'
