<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Chronocat Blog</title>
        <link>https://chronocat.vercel.app/blog</link>
        <description>Chronocat Blog</description>
        <lastBuildDate>Fri, 06 Oct 2023 19:12:45 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hans</language>
        <item>
            <title><![CDATA[Chronocat v0.0.50]]></title>
            <link>https://chronocat.vercel.app/blog/0050</link>
            <guid>https://chronocat.vercel.app/blog/0050</guid>
            <pubDate>Fri, 06 Oct 2023 19:12:45 GMT</pubDate>
            <description><![CDATA[Chronocat v0.0.50 正式发布。了解 Headless、Docker 和 Satori 等最新功能。]]></description>
            <content:encoded><![CDATA[<p>Chronocat v0.0.50 现已可用！本次更新我们带来了许多全新的功能，包括远程登录、Headless
模式（无头模式）、官方 Docker 镜像、新的 Satori 协议，以及其他一系列改进。</p>
<!-- -->
<p>让我们来一起看看这些新功能。</p>
<div class="theme-admonition theme-admonition-danger admonition_IZjC alert alert--danger"><div class="admonitionHeading_uVvU"><span class="admonitionIcon_HiR3"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>如果你来自 go-cqhttp#2471</div><div class="admonitionContent_bl22"><p>如果你来自 <a href="https://github.com/Mrs4s/go-cqhttp/issues/2471" target="_blank" rel="noopener noreferrer">go-cqhttp#2471</a> 并打算迁移，请先看下 <a href="https://github.com/chrononeko/chronocat" target="_blank" rel="noopener noreferrer">Chronocat 的 README</a>。里面给出了推荐的方案。</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_fF9Z" id="远程登录">远程登录<a href="#远程登录" class="hash-link" aria-label="远程登录的直接链接" title="远程登录的直接链接">​</a></h2>
<p>首先要进行介绍的就是「远程登录」功能。「远程登录」允许你在浏览器内进行 QQ 的登录。当你在指定
Chronocat 工作模式的命令行参数或环境变量中附加 <code>login</code> 开关时，Chronocat
会在控制台打印一个链接，你可以使用这个链接进行登录。</p>
<p><img loading="lazy" alt="远程登录" src="/assets/images/login-dad5e89e1bd3316924cb811c620f834f.png" width="1585" height="783" class="img__Ss2"></p>
<p>在 <a href="/launch">启动</a> 一节了解更多详情。</p>
<h2 class="anchor anchorWithStickyNavbar_fF9Z" id="chronocat-headless无头模式">Chronocat Headless（无头模式）<a href="#chronocat-headless无头模式" class="hash-link" aria-label="Chronocat Headless（无头模式）的直接链接" title="Chronocat Headless（无头模式）的直接链接">​</a></h2>
<p>有了远程登录的功能，我们就可以彻底抛弃 QQ 界面了。接下来要介绍的功能就是 Chronocat
Headless（无头模式）。在 Chronocat 工作模式参数中附加 <code>headless3</code> 开关，Chronocat
就会以无头模式启动，同时也会自动启用远程登录功能。由于不再显示界面，Chronocat
所需的内存也会大大降低。</p>
<p>需要注意的是，无头模式现在仍然处在「实验性功能」阶段。目前，只有模式
3（<code>headless3</code>）可供使用。你可以随意测试此功能，但我们不建议立即将此功能用于生产环境。
我们将在未来持续探索无头模式的更多可能性，并力求进一步降低内存占用。</p>
<p>在 <a href="/launch">启动</a> 一节了解更多详情。</p>
<h2 class="anchor anchorWithStickyNavbar_fF9Z" id="chronocat-docker">Chronocat Docker<a href="#chronocat-docker" class="hash-link" aria-label="Chronocat Docker的直接链接" title="Chronocat Docker的直接链接">​</a></h2>
<p>对于这样一个无需 GUI 的 Chronocat，将其容器化就变得轻而易举。同时，<a href="https://llqqnt.mukapp.top" target="_blank" rel="noopener noreferrer">LiteLoaderQQNT</a>
优秀的跨平台和跨版本特性也为 Chronocat 的容器化提供了可能。在这次更新中，我们推出了由
Chrononeko 团队开发和维护，基于 LiteLoaderQQNT 的 Chronocat 官方镜像——<code>chronoc/at</code>。你可以立即尝试：</p>
<div class="language-sh codeBlockContainer_ZGJx theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_qZBB"><pre tabindex="0" class="prism-code language-sh codeBlock_TAPP thin-scrollbar"><code class="codeBlockLines_AdAo"><span class="token-line" style="color:#393A34"><span class="token plain"># 创建一个目录作为 Chronocat 的数据目录，并在目录内执行：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker run -it --name chronocat -p 16530:16530 -p 5500:5500 -p 16340:16340 chronoc/at</span><br></span></code></pre><div class="buttonGroup_TNwR"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_MVhB" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_yxgH"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_QJLJ"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Chronocat 会随即启动并打印远程登录的链接，点击链接即可登录
QQ。之后，即可立即开始使用 Satori 和 Red 服务了。</p>
<p>目前版本的容器会占用约 250MiB 内存。随着无头模式的更新，未来的容器内存占用有望进一步降低。</p>
<p><img loading="lazy" alt="镜像内存占用" src="/assets/images/docker-mem-03513ed5eda90b75549196cad8e13d49.png" width="913" height="352" class="img__Ss2"></p>
<p>在 <a href="/install/docker/official">Docker 安装</a> 一节了解更多详情。</p>
<h2 class="anchor anchorWithStickyNavbar_fF9Z" id="satori-protocol">Satori Protocol<a href="#satori-protocol" class="hash-link" aria-label="Satori Protocol的直接链接" title="Satori Protocol的直接链接">​</a></h2>
<p>Satori Protocol 是一个通用的、跨平台的聊天协议。从 v0.0.50 开始，Chronocat 将 Satori 作为推荐使用的协议实现。</p>
<p>与 RedProtocol 相比，Satori 有几个显著的优势：</p>
<ul>
<li><strong>简洁</strong>。与 RedProtocol 力求提供全部可提供的信息不同，Satori 对事件结构和 API
的调用方式进行了精心设计，你甚至能在不阅读任何文档的情况下理解 Satori 的数据结构。</li>
<li><strong>稳定</strong>。RedProtocol 在大部分情况下会将 API 调用的结果直接返回，因此同一 API 在不同版本 QQ
之间的表现可能会有较大的差异。与此同时，Satori 会力求保证每一个字段的稳定性，使你只需参考文档就可完成代码编写。</li>
<li><strong>统一</strong>。Satori 对聊天平台进行了高度抽象，使你能使用统一的方式完成需求——使用单一的发送消息接口，
你可以完成文本、图片、音频甚至是合并转发的发送。</li>
<li><strong>跨平台</strong>。在 Chronocat 之外，Satori 已经支持了国内外所有主流的聊天平台。基于 Satori
进行开发的机器人可以轻松移植到 QQ 群、QQ 频道、Kook 以及 Discord 和 Telegram 等主流聊天平台。</li>
</ul>
<p>在 <a href="/develop/satori/">Satori</a> 一节了解更多详情，或直接前往 <a href="https://satori.js.org/zh-CN/" target="_blank" rel="noopener noreferrer">Satori 官网</a> 了解详情。</p>
<p>当然，如果你目前仍在使用 RedProtocol——无需担心！对于现有的基于 RedProtocol
的框架和适配器，我们仍将继续提供更新和支持。你可以自由决定迁移到 Satori 的时机。</p>
<h2 class="anchor anchorWithStickyNavbar_fF9Z" id="其他改进">其他改进<a href="#其他改进" class="hash-link" aria-label="其他改进的直接链接" title="其他改进的直接链接">​</a></h2>
<p>除了上面提到的新功能以外，我们还在其他许多小的方面进行了改进。这里列举了一些：</p>
<ul>
<li>Chronocat 服务密码（token）需要在首次启动之后打开配置文件获取，这增加了框架和适配器对接
Chronocat 的难度。现在，Chronocat 首次启动时支持使用 <code>--chrono-default-token</code> 和
<code>CHRONO_DEFAULT_TOKEN</code> 设定初始服务密码，框架和适配器可以利用此功能生成初始密码，而无需等待
Chronocat 自行生成。</li>
<li>Red 协议新增了 API <code>bot/exit</code>，可用于普通环境下关闭 QQ，或容器环境下重启 QQ。</li>
<li>随着 v0.0.50 的推出，本站也进行了完全的重构；目前，文档仍有许多内容尚未编写完毕。
我们会在未来一段时间尽快编写文档；如果你急需某部分的文档，那么你随时都可以通过
<a href="/more/community">社区</a> 途径反馈给我们，我们会优先编写你需要的内容！</li>
</ul>
<p>当然，除此之外，我们还有一些已实装但未发布的小功能，等待大家自行探索。</p>
<h2 class="anchor anchorWithStickyNavbar_fF9Z" id="未来">未来<a href="#未来" class="hash-link" aria-label="未来的直接链接" title="未来的直接链接">​</a></h2>
<p>这个版本只是 Chronocat v0.0.50 系列的开始，未来 Chronocat
也将会有更多激动人心的功能加入——其中的一些功能甚至已经进入了早期的开发阶段。任何
Chronocat 的大型更新或新增功能都会在此博客发布，所以不要错过！</p>
<h2 class="anchor anchorWithStickyNavbar_fF9Z" id="立即尝试">立即尝试<a href="#立即尝试" class="hash-link" aria-label="立即尝试的直接链接" title="立即尝试的直接链接">​</a></h2>
<p>Chronocat v0.0.50 已经可用！你现在就可以前往安装或更新 Chronocat。</p>
<a class="button button--secondary button--lg button--normal" href="/install"><span>前往安装</span></a>
<h2 class="anchor anchorWithStickyNavbar_fF9Z" id="遇到问题">遇到问题？<a href="#遇到问题" class="hash-link" aria-label="遇到问题？的直接链接" title="遇到问题？的直接链接">​</a></h2>
<p>如果在使用 Chronocat 的途中遇到了任何问题，你都可以通过 <a href="/more/community">社区</a>
途径反馈给我们，我们将尽力解决你的问题！</p>
<h2 class="anchor anchorWithStickyNavbar_fF9Z" id="致谢">致谢<a href="#致谢" class="hash-link" aria-label="致谢的直接链接" title="致谢的直接链接">​</a></h2>
<p>在 Chronocat v0.0.30 到 v0.0.40 的这段时间里，在 Chrononeko 团队之外，还有以下两位小伙伴对
Chronocat 做出了贡献：</p>
<ul>
<li><a href="https://github.com/Hieuzest" target="_blank" rel="noopener noreferrer">@Hieuzest</a></li>
<li><a href="https://github.com/XiYang6666" target="_blank" rel="noopener noreferrer">@XiYang6666</a></li>
</ul>
<p>感谢你们的贡献。</p>
<p>除此之外，以下两位小伙伴在官方 Docker 镜像推出之前自行制作了 Chronocat
镜像，为官方镜像提供了非常优秀的参考：</p>
<ul>
<li><a href="https://github.com/yuuki-nya" target="_blank" rel="noopener noreferrer">@yuuki-nya</a></li>
<li><a href="https://github.com/he0119" target="_blank" rel="noopener noreferrer">@he0119</a></li>
</ul>
<p>同样感谢你们。</p>
<p>最后，还要感谢在这条道路上坚持探索的大家——以及看到这里的你——是你们让 Chronocat
变成可能。谢谢！</p>]]></content:encoded>
            <category>release</category>
        </item>
    </channel>
</rss>